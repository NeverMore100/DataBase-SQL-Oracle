1) Select name_product,name_company,price,quantity
from market,company, product
where market.id_product=company.id_product and company.id_company=product.id_companies and market.id_product = product.id_product
 // –≤—ã–≤–æ–¥ –º–∞—Ä–∫–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤

2) Select SUM(PRICE) as SUM_of_prod
FROM market
WHERE market.quantity < 50 
union
SELECT count(quantity) AS avg_of_quan
FROM market x, company z
WHERE x.id_product = z.id_product and z.name_product like 'A%'
//–≤—ã–≤–æ–¥ –Ω–∞ –∫–∞–∫—É—é —Å—É–º–º—É –≤ –º–∞—Ä–∫–µ—Ç–µ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤–≤ –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è –Ω–∞ A

3)
Delete from market
Where id_product in (Select * from prosrochka)
////////////
 Insert into existed_product
select id_product
from company
where company.id_product in(select* from prosrochka_id)

Create view prosrochka_id AS
select id_product 
from market
where date_end-date_start>5
// –≤—ã–≤–æ–¥ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏—Ö –≤ existed product –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å –º–∞—Ä–∫–µ—Ç–∞;

4) insert into perevod
values(1,2,50,'11/12/2022');
/////////////////////////////
create or replace TRIGGER perevod_trigger
AFTER INSERT
ON perevod
FOR EACH ROW

declare
pragma autonomous_transaction;

BEGIN


update clients
 set balance  = (case when  id_client =:new.ID_PEREVEL then balance-:new.SUMMA_PEREVODA
                      when  id_client=:new.ID_POLUCHIL then balance+:new.SUMMA_PEREVODA
                      end)
 WHERE id_client in (:new.ID_PEREVEL,:new.ID_POLUCHIL);
commit;
END;
//////////–¢—Ä–∏–≥–≥–µ—Ä –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥.
5)Drop view prosrochka_id
//–î—Ä–æ–ø–Ω—É—Ç—å 4 –ø—É–Ω–∫—Ç 
6) //–≤—ã–±–æ—Ä –∫–ª–∏–µ–Ω—Ç–æ–º –ø—Ä–æ–¥—É–∫—Ç–∞. –æ–Ω –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –µ–≥–æ –∞–π–¥–∏. –∞ –º—ã –¥–µ–ª–∞–µ–º –∏–Ω—Å–µ—Ä—Ç –≤ –±–∞—Å–∫–µ—Ç.
insert all
into basket("nameProduct,k,price*k"); –ø—Ä–∞–π—Å –∏ –∏–º—è –±–µ—Ä–µ–º —Å –º–∞—Ä–∫–µ—Ç–∞ —Å –ø–æ–º–æ—â—å—é –∞–π–¥–∏
7) Select id_client, sum(price)
from basket
group by id_client
//–≤—ã–≤–æ–¥ —Ç–æ—Ç–∞–ª –ø—Ä–∞–π—Å–∞ –≤ –±–∞—Å–∫–µ—Ç–µ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
8)–ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç–∏—Ç—å —Å–æ–∑–¥–∞–µ—Ç—Å—è payment.–ò –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–æ—à–ª–∞ –æ–ø–ª–∞—Ç–∞
—Å–æ–∑–¥–∞–µ—Ç—Å—è –ß–ï–ö –ò –±–∞—Å–∫–µ—Ç –¥–µ–ª–∞—é –ø—É—Å—Ç—ã–º –¥–ª—è —ç—Ç–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞.
–ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ —á–µ–∫ –¥–∞—Ç–∞ –¥–µ—Ñ–∞—É–ª—Ç —Å–µ–≥–æ–¥–Ω—è—à–Ω—è—è.
create or replace TRIGGER ClearBasket
AFTER INSERT
ON CHECK_OF_CLIENTS
FOR EACH ROW
declare
pragma autonomous_transaction;

BEGIN
DELETE FROM BASKET
 WHERE basket.id_client = :new.id_client;

commit;
END;
//—á–∏—Å—Ç–∫–∞ –±–∞—Å–∫–µ—Ç–∞.
insert into CHECK_OF_CLIENTS
values (2,'NameProduct',6*268,current_date,2);
//proverka
/////////////////////
üé¥ 
Select DISTINCT x.name_company, y.name_product, z.date_start
from product x, company y, market z

üé¥
Select date_start, SUM(price)
from market
group by date_start
order by date_start

üé¥
Select first_name
from clients
where id_client in (
    Select id_client
    from market
    where price < 400
    Intersect
    Select id_client
    from clients
    where balance > 400
)
// –ø–æ–∫—É–ø–∞—Ç–µ–ª–∏ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∫—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç —Ü–µ–Ω–æ–π –º–µ–Ω—å—à–µ 400

üé¥
Select id_client, sum(price)
from basket
group by id_client

// –≤—ã–≤–æ–¥ —Å—É–º–º—ã –æ–±—â–µ–π –ø–æ–∫—É–ø–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞

üé¥
select id_client, price
from market
where price > 300 and price < 570
MINUS
select id_client, balance
from clients
where id_client > 40

9) 
insert into dolzhniki
select client_check_sum.id_client,client_check_sum.total_cl-clients.balance
from clients,client_check_sum
where clients.id_client=client_check_sum.id_client AND client_check_sum.total_cl>clients.balance

create view client_check_sum AS
Select id_client, sum(price) as total_cl
from basket
group by id_client
//–≤—ã–≤–æ–¥ —É –∫–æ–≥–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –∏ —Å—Ä–∞–∑—É –¥–æ–±–∞–≤–∏—Ç—å –≤ —Ç–∞–±–ª–∏—Ü—É –¥–æ–ª–∂–Ω–∏–∫–æ–≤.
10)
insert into dohod
values('2022',(select sum(price)
from CHECK_OF_CLIENTS
where date_of_check like '%2022' )+(select sum(ZADOLZHNOST)
from DOLZHNIKI)-(select sum(QUANTITY*DATE_START)
from market
where id_product in(select * from EXISTED_PRODUCT)
))
//–ø–æ–¥—Å—á–µ—Ç –¥–æ—Ö–æ–¥–∞ —Å—É–º–º–∞ —á–µ–∫–æ–≤ –∏ –¥–æ–ª–∂–Ω–∏–∫–æ–≤ –º–∏–Ω—É—Å –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
11) select *
from totals_perevods
where tt>200

create view totals_perevods as
select id_perevel,sum(SUMMA_PEREVODA) as tt
from perevod
group by id_perevel
//–≤—ã–≤–æ–¥ —Ç–µ—Ö –∫—Ç–æ –ø–µ—Ä–µ–≤–µ–ª –±–æ–ª—å—à–µ 200 –¥–µ–Ω–µ–≥

12) insert into CHECK_OF_CLIENTS
values (1,'Zaam-Dox',234,current_date,1)
//////////////////////////////////
create or replace trigger update_quantity_market
AFTER
DELETE on basket
for each row
declare
pragma autonomous_transaction;
begin
UPDATE market
   SET quantity = quantity-:old.quantity
 WHERE :old.id_product = market.id_product;

commit;
end;
//–∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –º–∞—Ä–∫–µ—Ç–µ
13)

select market.id_product ,name_product,quantity
from market,company
where quantity<200 and market.id_product=company.id_product
//–≤—ã–≤–æ–¥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω—á–∞—é—Ç—Å—è –∏ –æ—Ç—Å—é–¥–∞ —ç—Ç–∏ –∞–π–¥–∏ –≤–∑—è—Ç—å –∏ –∑–∞–∫–∏–Ω—É—Ç—å –≤ —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —É –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä —á—Ç–æ–±—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–ª—Å—è –ø—Ä–æ–¥—É–∫—Ç –≤ –º–∞—Ä–∫–µ—Ç–µ.
insert into zapros_na_p
select market.id_product ,quantity+100
from market,company
where quantity<200 and market.id_product=company.id_product
////////
‚ÄÉ
14)
insert into sales
values(5,50)

create or replace TRIGGER to_sales
AFTER INSERT
ON sales
FOR EACH ROW
declare
pragma autonomous_transaction;

BEGIN

UPDATE market
   SET price = price*(:new.procent/100)
 WHERE market.id_product = :new.id_product;
commit;
END;
///—Å–¥–µ–ª–∞—Ç—å —Å–∫–∏–¥–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Ç—Ä–∏–≥–µ—Ä
15) delete from sales
where sales.id_product=5

create or replace trigger back_to_old_price
AFTER DELETE on sales
for each row
declare
pragma autonomous_transaction;
begin
UPDATE market
   SET price = (price*100)/(100-:old.procent)
 WHERE market.id_product = :old.id_product;
commit;
end;
//—É–±—Ä–∞—Ç—å —Å–∫–∏–¥–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä





